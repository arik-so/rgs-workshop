import { Result_NoneLightningErrorZ } from '../structs/Result_NoneLightningErrorZ.mjs';
import { Type } from '../structs/Type.mjs';
import { TwoTuple_PublicKeyTypeZ } from '../structs/TwoTuple_PublicKeyTypeZ.mjs';
import { CustomMessageReaderInterface } from '../structs/CustomMessageReader.mjs';
import { CommonBase } from './CommonBase.mjs';
/** An implementation of CustomMessageHandler */
export interface CustomMessageHandlerInterface {
    /**Called with the message type that was received and the buffer to be read.
     * Can return a `MessageHandlingError` if the message could not be handled.
     */
    handle_custom_message(msg: Type, sender_node_id: Uint8Array): Result_NoneLightningErrorZ;
    /**Gets the list of pending messages which were generated by the custom message
     * handler, clearing the list in the process. The first tuple element must
     * correspond to the intended recipients node ids. If no connection to one of the
     * specified node does not exist, the message is simply not sent to it.
     */
    get_and_clear_pending_msg(): TwoTuple_PublicKeyTypeZ[];
}
/**
 * Handler for BOLT1-compliant messages.
 */
export declare class CustomMessageHandler extends CommonBase {
    /** Creates a new instance of CustomMessageHandler from a given implementation */
    static new_impl(arg: CustomMessageHandlerInterface, customMessageReader_impl: CustomMessageReaderInterface): CustomMessageHandler;
    /**
     * Called with the message type that was received and the buffer to be read.
     * Can return a `MessageHandlingError` if the message could not be handled.
     */
    handle_custom_message(msg: Type, sender_node_id: Uint8Array): Result_NoneLightningErrorZ;
    /**
     * Gets the list of pending messages which were generated by the custom message
     * handler, clearing the list in the process. The first tuple element must
     * correspond to the intended recipients node ids. If no connection to one of the
     * specified node does not exist, the message is simply not sent to it.
     */
    get_and_clear_pending_msg(): TwoTuple_PublicKeyTypeZ[];
}
